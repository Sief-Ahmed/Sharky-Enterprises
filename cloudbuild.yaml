options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
steps:
  # Step 1: Checkout Source Code
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/Sief-Ahmed/Sharky-Enterprises', '.']

  # Step 2: Set Up Python Environment
  - name: 'python:3.9'
    id: 'Setup Python Environment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd flask_app
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

  # Step 3: Set Up PHP Environment
  - name: 'php:8.0'
    id: 'Setup PHP Environment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd php-fishing-quote-api
        composer install

  # Step 4: Run Snyk Security Scan for Python
  - name: 'snyk/snyk-cli:latest'
    id: 'Snyk Scan Python'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd flask_app
        SNYK_TOKEN=8686f5ad-2e7d-487b-904e-24efa16fc928 snyk code test --skip-unresolved --json-file-output=json

  # Step 5: Run Snyk Security Scan for PHP
  - name: 'snyk/snyk-cli:latest'
    id: 'Snyk Scan PHP'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd php-fishing-quote-api
        SNYK_TOKEN=8686f5ad-2e7d-487b-904e-24efa16fc928 snyk code test --skip-unresolved --json-file-output=json

  # Step 6: Run SonarQube Analysis for Python
  - name: 'sonarsource/sonar-scanner-cli:latest'
    id: 'SonarQube Scan Python'
    env:
      - 'SONAR_HOST_URL=https://your-sonarqube-server.com'
      - 'SONAR_TOKEN=${SONAR_TOKEN}'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd flask_app
        sonar-scanner \
          -Dsonar.projectKey=your_python_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  # Step 7: Run SonarQube Analysis for PHP
  - name: 'sonarsource/sonar-scanner-cli:latest'
    id: 'SonarQube Scan PHP'
    env:
      - '$SONAR_HOST_URL'
      - 'SONAR_TOKEN=${SONAR_TOKEN}'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd php-fishing-quote-api
        sonar-scanner \
          -Dsonar.projectKey=your_php_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  # # Step 8: (Optional) Build Docker Image for Python App
  # - name: 'gcr.io/cloud-builders/docker'
  #   id: 'Build Docker Image Python'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-app:$COMMIT_SHA', 'flask_app']

  # # Step 9: (Optional) Build Docker Image for PHP App
  # - name: 'gcr.io/cloud-builders/docker'
  #   id: 'Build Docker Image PHP'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/php-fishing-quote-api:$COMMIT_SHA', 'php-fishing-quote-api']

  # # Step 10: (Optional) Push Docker Images to Container Registry
  # - name: 'gcr.io/cloud-builders/docker'
  #   id: 'Push Docker Image Python'
  #   args: ['push', 'gcr.io/$PROJECT_ID/flask-app:$COMMIT_SHA']

  # - name: 'gcr.io/cloud-builders/docker'
  #   id: 'Push Docker Image PHP'
  #   args: ['push', 'gcr.io/$PROJECT_ID/php-fishing-quote-api:$COMMIT_SHA']

  # # Step 11: (Optional) Deploy to Google Kubernetes Engine (GKE)
  # - name: 'gcr.io/cloud-builders/kubectl'
  #   id: 'Deploy Python App to GKE'
  #   args:
  #     - 'set'
  #     - 'image'
  #     - 'deployment/flask-app'
  #     - "flask-app=gcr.io/$PROJECT_ID/flask-app:$COMMIT_SHA"

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   id: 'Deploy PHP App to GKE'
  #   args:
  #     - 'set'
  #     - 'image'
  #     - 'deployment/php-fishing-quote-api'
  #     - "php-fishing-quote-api=gcr.io/$PROJECT_ID/php-fishing-quote-api:$COMMIT_SHA"


# Timeout for the build process
timeout: '1200s'


# Optional: Notifications or further actions

substitutions:
  SNYK_TOKEN: '8686f5ad-2e7d-487b-904e-24efa16fc928'
  SONAR_PROJECT_KEY: 'Sharky-Enterprises'
  SONAR_HOST_URL: 'https://your-sonarqube-instance.com'
  SONAR_TOKEN: 'be7e9422567f4c81bbcfe0021aabe1d5ae792486'
  _REPO_NAME: 'Sharky-Enterprises'

# Additional settings
timeout: 1200s
