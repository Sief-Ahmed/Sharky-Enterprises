options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

steps:
  # Step 1: Install Snyk CLI globally using npm
  - name: 'node:14'  # Using the Node.js 14 image which includes npm
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install snyk -g
    id: 'Install Snyk CLI'

  # Step 2: Run Snyk test in the flask_app directory with the provided token
  - name: 'node:14'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd flask_app
        SNYK_TOKEN=8686f5ad-2e7d-487b-904e-24efa16fc928 snyk test --skip-unresolved
    id: 'Snyk Test in flask_app'



  # # Step 2: Run Snyk security scan on the entire Cloud Build workspace
  # - name: 'snyk/snyk-cli:npm'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       snyk config set api=${_SNYK_TOKEN}
  #       snyk code test --severity-threshold=medium
  #   id: 'Snyk Code Test'

  # # Step 3: Run SonarQube code analysis
  # - name: 'gcr.io/cloud-builders/mvn'
  #   args: ['sonar:sonar', '-Dsonar.projectKey=${_SONAR_PROJECT_KEY}', '-Dsonar.host.url=${_SONAR_HOST_URL}', '-Dsonar.login=${_SONAR_AUTH_TOKEN}']
  #   id: 'SonarQube Analysis'

  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']
  #   id: 'Push Docker Image'

  # # Step 4: Deploy the Docker image
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   args: ['run', 'deploy', '$REPO_NAME', '--image', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']
  #   id: 'Deploy to Cloud Run'

# Optional: Notifications or further actions

# substitutions:
#   _SNYK_TOKEN: '8686f5ad-2e7d-487b-904e-24efa16fc928'
#   _SONAR_PROJECT_KEY: 'Sharky-Enterprises'
#   _SONAR_HOST_URL: 'https://your-sonarqube-instance.com'
#   _SONAR_AUTH_TOKEN: 'be7e9422567f4c81bbcfe0021aabe1d5ae792486'
#   _REPO_NAME: 'Sharky-Enterprises'

# Additional settings
timeout: 1200s
